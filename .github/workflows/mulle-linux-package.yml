name: Artifacts

on:
 release:
    types: [published]
 push:
    tags:
    - '*'
 workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    steps:
    - name: Set MULLE_HOSTNAME
      run: |
           name="${GITHUB_REF##*/}"
           MULLE_HOSTNAME="${MULLE_HOSTNAME:-ci-${name##*-}}"
           echo "MULLE_HOSTNAME=${MULLE_HOSTNAME}" >> $GITHUB_ENV

    - name: Add to path
      run:  echo "$HOME/bin" >> $GITHUB_PATH

    - name: Dump Environment
      run:  env | sort

    - uses: actions/checkout@v4

    - uses: mulle-sde/github-ci@v2

    - name: Install sudo if needed
      run: |
           if ! command -v sudo &> /dev/null; then
             apt update
             apt install -y sudo
           fi

    - name: Install rpmbuild
      run:  sudo apt-get update && sudo apt-get install -y rpm

    - name: Install mulle-project
      run:  |
            mulle-fetch 'https://github.com/mulle-nat/mulle-project/archive/latest.tar.gz' \
            && cd 'mulle-project-latest' \
            && sudo ./bin/installer /usr

    - name: Get version number
      run:  echo "MULLE_CORE_VERSION"=$(mulle-project-version -s) >> $GITHUB_ENV

    - name: Dump Project Environment
      run:  |
            [ ! -d .mulle/etc/env ] || ls -l .mulle/etc/env/environment*.sh
            mulle-sde environment

    - name: Build Debian Package
      run:  |
            mkdir -p package
            cd package
            cmake --version
            cmake -DCMAKE_BUILD_TYPE="Release" ..
            cpack -G DEB
            package="mulle-core_${MULLE_CORE_VERSION}-`arch`.deb"
            mv *.deb "${package}"
            echo "DEB_PACKAGE=package/${package}" >> $GITHUB_ENV

    - name: Build Redhat Package
      run:  |
            mkdir -p package
            cd package
            cpack -G RPM
            package="mulle-core_${MULLE_CORE_VERSION}-`arch`.rpm"
            mv *.rpm "${package}"
            echo "RPM_PACKAGE=package/${package}" >> $GITHUB_ENV

    - name: Upload packages (ZIP)
      uses: actions/upload-artifact@v4
      with:
        name: Linux-packages
        path: |
              ${{ env.RPM_PACKAGE }}
              ${{ env.DEB_PACKAGE }}

  arch-package:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]

    container:
      image: archlinux
      options: --privileged

    steps:
    - name: Set MULLE_HOSTNAME
      run: |
           name="${GITHUB_REF##*/}"
           MULLE_HOSTNAME="${MULLE_HOSTNAME:-ci-${name##*-}}"
           echo "MULLE_HOSTNAME=${MULLE_HOSTNAME}" >> $GITHUB_ENV

    - name: Add to path
      run:  echo "$HOME/bin" >> $GITHUB_PATH

    - name: Dump Environment
      run:  env | sort

    - uses: actions/checkout@v4

    - uses: mulle-sde/github-ci@v2

    - name: Install sudo if needed
      run: |
           if ! command -v sudo &> /dev/null; then
             pacman -Sy --noconfirm sudo
           fi

    - name: Install mulle-project
      run:  |
            mulle-fetch 'https://github.com/mulle-nat/mulle-project/archive/latest.tar.gz' \
            && cd 'mulle-project-latest' \
            && sudo ./bin/installer /usr

    - name: Get version number
      run:  echo "MULLE_CORE_VERSION"=$(mulle-project-version -s) >> $GITHUB_ENV

    - name: Dump Project Environment
      run:  |
            [ ! -d .mulle/etc/env ] || ls -l .mulle/etc/env/environment*.sh
            mulle-sde environment

    - name: Create PKGBUILD
      run:  mulle-project-pacman-pkg > PKGBUILD

    - name: Build Arch Linux package
      uses: FFY00/build-arch-package@v1
      with:
        PKGBUILD: PKGBUILD
        OUTDIR: ${{ env.PWD }}/package

    - name: Build Arch Package
      run:  |
          echo "ARCH_PACKAGE=package/*.zst" >> $GITHUB_ENV

    - name: Upload packages (ZIP)
      uses: actions/upload-artifact@v4
      with:
        name: Arch-packages
        path: |
              ${{ env.ARCH_PACKAGE }}
